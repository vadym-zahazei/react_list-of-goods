{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleReverse","setState","handleSortByAlphabet","ALPABET","handleSortByLength","LENGTH","handleReset","this","listToRender","goods","visibleGoods","sort","good1","good2","localeCompare","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,cAAgB,WACd,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,qBAAuB,WACrB,EAAKD,SAAS,CAAEH,SAAUL,EAASU,WAbvC,EAgBEC,mBAAqB,WACnB,EAAKH,SAAS,CAAEH,SAAUL,EAASY,UAjBvC,EAoBEC,YAAc,WACZ,EAAKL,SAAS,CAAEJ,YAAY,EAAOC,SAAUL,EAASM,QArB1D,4CAwBE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdU,EA3DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENa,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQf,GACN,KAAKL,EAASU,QACZ,OAAOS,EAAME,cAAcD,GAE7B,KAAKpB,EAASY,OACZ,OAAOO,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITlB,GACFa,EAAaM,UAGRN,EAoCgBO,CAAkBvB,EAAiB,CACtDG,aACAC,aAGF,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,SACA,UACA,CAAE,WAAYtB,IAAaL,EAASU,UAGxCkB,QAASd,KAAKL,qBAThB,iCAcA,wBACEiB,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,WAAYtB,IAAaL,EAASY,SAGxCgB,QAASd,KAAKH,mBAThB,4BAcA,wBACEe,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,YAA2B,IAAfvB,IAGlBwB,QAASd,KAAKP,cAThB,sBAcgB,IAAfH,GAAwBC,IAAaL,EAASM,KAC3C,GAEA,wBACEoB,KAAK,SACLD,UACEE,IACE,SACA,YACA,YAGJC,QAASd,KAAKD,YAThB,sBAiBN,6BACE,6BACGE,EAAac,KAAI,SAACC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBApGtC,GAAyBC,IAAMC,WC1D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8809f98e.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleSortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  handleSortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleReset = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const listToRender = getReorderedGoods(goodsFromServer, {\n      isReversed,\n      sortType,\n    });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button',\n                'is-info',\n                { 'is-light': sortType !== SortType.ALPABET },\n              )\n            }\n            onClick={this.handleSortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button',\n                'is-success',\n                { 'is-light': sortType !== SortType.LENGTH },\n              )\n            }\n            onClick={this.handleSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button',\n                'is-warning',\n                { 'is-light': isReversed === false },\n              )\n            }\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {isReversed === false && sortType === SortType.NONE\n            ? ''\n            : (\n              <button\n                type=\"button\"\n                className={\n                  classNames(\n                    'button',\n                    'is-danger',\n                    'is-light',\n                  )\n                }\n                onClick={this.handleReset}\n              >\n                Reset\n              </button>\n            )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {listToRender.map((good) => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}